%僵尸网络（botnet）：一台机器控制其他机器，形成的一种一对多控制的网络。僵尸网络是一种自动发起攻击的网络。
%bot即为僵尸程序；种植了bot程序的计算机就是僵尸计算机；僵尸网络可以描述为由众多被同一攻击者通过互联网秘
%密植入控制程序的可以被集中控制的计算机群。
%僵尸主控机：botmaster 可控性成为僵尸网络的主要特点之一
%
%僵尸网络的评估因素：1.网络的基本模式，即命令控制模式(command and control) 分为三种 集中式 分散式 混合式  危害之间增加
%                   2.网络的规模（也就是僵尸网络的节点数，节点数越多规模越大）
%                   3.网络的攻击性/窃密性 (仅仅用于挖矿的僵尸网络的危害比用于DDOS的僵尸网络的危害要小一些)
%                   4.网络隐蔽性（即bot程序的隐蔽性，如果bot程序更加难以逆向，难以发现，则网络隐蔽性越好）
%                   5.网络可控性（如果是在小型可控的局域网内，僵尸网络的危害将十分有限且易于根除）
%
%无尺度网络：很多复杂系统拥有共同的重要特性:大部分节点只有少数几个连结，而某些节点却拥有
%            与其他节点的大量连结。这些具有大量连结的节点称为“集散节点”，所拥有的连结
%            可能高达数百、数千甚至数百万。由此看来，这一特性似乎能说明网络是无尺度的。
%            无尺度网络具有某些重要特性。例如它们都可以承受意外的故障，但面对协同式攻击却很脆弱。



%下面是自己编写的，用层次分析法 针对5种因素分析三个僵尸网络的安全性
%需要6个矩阵
%重要性评估方式：两两因素互相比较
%1.表示同样重要
%3.表示一个比一个稍微重要
%5.表示一个比一个明显重要
%7.表示一个比一个强烈重要
%9.表示一个比一个极端重要
%(2,4,6,8)为中间值
%倒数 aij=k;aji=(1/k)
%矩阵A 5种因素自身的重要性评估 这里为了方便 假设5种因素的重要性递减
load scoreweight.mat;
A=[1,3,5,7,9;1/3,1,3,5,7;1/5,1/3,1,3,5;1/7,1/5,1/3,1,3;1/9,1/7,1/5,1/3,1;];
disp('A');
disp(A);
%矩阵B 三个等待测评的网络 对于5种危害因素的得分
B1 = [1,2,7;1/2,1,2;1/7,1/2,1];
B2 = [1,3,4;1/3,1,3;1/4,1/3,1];
B3 = [1,2,5;1/2,1,2;1/5,1/2,1];
B4 = [1,2,6;1/2,1,2;1/6,1/2,1];
B5 = [1,4,9;1/4,1,4;1/9,1/4,1];
disp('B1');
disp(B1);
disp('B2');
disp(B2);
disp('B3');
disp(B3);
disp('B4');
disp(B4);
disp('B5');
disp(B5);

[CIA, CRA, WA] = getW(A);
[CI_B1, CR_B1, W_B1] = getW(B1);
[CI_B2, CR_B2, W_B2] = getW(B2);
[CI_B3, CR_B3, W_B3] = getW(B3);
[CI_B4, CR_B4, W_B4] = getW(B4);
[CI_B5, CR_B5, W_B5] = getW(B5);
disp('W_B1');
disp(W_B1);
disp('W_B2');
disp(W_B2);
disp('W_B3');
disp(W_B3);
disp('W_B4');
disp(W_B4);
disp('W_B5');
disp(W_B5);

all_result = [W_B1,W_B2,W_B3,W_B4,W_B5]*(WA.*score);  %最终得到的值 即为3个不同僵尸网络最终的得分 哪个高哪个就是危害较大的 即安全性差
[a,b] = sort(all_result);
disp('网络安全性评估从低到高为：')
disp(b);